{"version":3,"sources":["pages/dashboard/PrevTrip.js","services/dashboard.jsx"],"names":["PrevTrip","props","state","page_data","previous_trips","dashboardService","getOldTripList","then","res","setState","alertService","showError","page_content","trips_list","this","map","trip","rooms","key","id","className","status_color","status","to","name","room_address_city_or_state","host","dates_subject","push","length","colSpan","React","PureComponent","ajaxGet","API_HOST","ba_roomid","data","ajaxPost","req","ajaxPostForm"],"mappings":"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","file":"static/js/44.78fd2424.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { dashboardService } from 'services/dashboard';\r\nimport { alertService } from 'services/alert';\r\n\r\nimport 'assets/styles/pages/dashboard/trip.scss';\r\n\r\nclass PrevTrip extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      page_data : {\r\n        previous_trips : []\r\n      }\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    dashboardService.getOldTripList().then(res => {\r\n      if (res) {\r\n        this.setState({\r\n          page_data : res.page_data\r\n        });\r\n      } else {\r\n        alertService.showError('Get old trip list');\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let page_content = [];\r\n\r\n    let trips_list = this.state.page_data.previous_trips.map((trip) => {\r\n      return (\r\n        trip.rooms ? \r\n        (\r\n          <tr key={trip.id}>\r\n            <td>\r\n              <span className=\"label label-orange label-info\">\r\n                <span className={\"label-\" + trip.status_color}>\r\n                  {trip.status}\r\n                  </span>\r\n              </span>\r\n              <br />\r\n            </td>\r\n            <td className=\"location\">\r\n              <Link to=\"#\"> {trip.rooms ? trip.rooms.name : 'No rooms'} </Link>\r\n              <br/>\r\n              {trip.room_address_city_or_state}\r\n              </td>\r\n            <td className=\"host\"> <Link to=\"#\"> {trip.host} </Link> </td>\r\n            <td className=\"dates\"> {trip.dates_subject} </td>\r\n            <td>\r\n              <ul className=\"list-unstyled\">\r\n                <li className=\"row-space-1\">\r\n                  <Link to=\"#\" className=\"button-steel\"> Message History </Link>\r\n                  <br/>\r\n                  <Link to=\"#\" className=\"button-steel\"> Cancel Request </Link>\r\n                </li>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n        )\r\n        : null\r\n      );\r\n    })\r\n\r\n    page_content.push(\r\n      <div className=\"panel row-space-4\" key='pending_trips'>\r\n        <div className=\"panel-header\">\r\n          Previous Trips\r\n          </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table panel-body panel-light\">\r\n            <tbody>\r\n              <tr>\r\n                <th> Status </th>\r\n                <th> Location </th>\r\n                <th> Host </th>\r\n                <th> Dates </th>\r\n                <th> Options </th>\r\n              </tr>\r\n              {trips_list.length ? trips_list : <tr><td colSpan='100%' className='text-center'>You have no previous trips!</td></tr>}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let page_data = page_content ? page_content : '<div>No Data</div>';\r\n\r\n    return (<div className=\"col-md-12 p0\">{page_data}</div>);\r\n  }\r\n}\r\n\r\nexport default PrevTrip;","import {API_HOST, ajaxGet, ajaxPost, ajaxPostForm} from 'services/config';\r\n\r\nclass DashboardService {\r\n  /////////////////////////////////////////////////\r\n  // Dashboard Content\r\n  /////////////////////////////////////////////////\r\n  getContent() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/index`);\r\n  }\r\n\r\n  /////////////////////////////////////////////////\r\n  // Listings\r\n  /////////////////////////////////////////////////\r\n  getRoomList() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/getlistings`);\r\n  }\r\n\r\n  getRoomData(id, ba_roomid) {\r\n    return ajaxGet(`${API_HOST}/ba/api/set_baroomid?roomid=${id}&&ba_roomid=${ba_roomid}`);\r\n  }\r\n\r\n  // TODO: Add Data\r\n  changeRoomState(data) {\r\n    return ajaxPost(`${API_HOST}/ajax/change_status_of_room`, data);\r\n  }\r\n\r\n  getRoomReservation(data = null) {\r\n    if (data) {\r\n      return ajaxGet(`${API_HOST}/ajax/dashboard/my_reservations` + data);\r\n    } else {\r\n      return ajaxGet(`${API_HOST}/ajax/dashboard/my_reservations`);\r\n    }\r\n  }\r\n\r\n  acceptReservation(id, data) {\r\n    return ajaxPost(`${API_HOST}/ajax/reservation/accept/${id}`, data);\r\n  }\r\n\r\n  declineReservation(id, data) {\r\n    return ajaxPost(`${API_HOST}/ajax/reservation/decline/${id}`, data);\r\n  }\r\n\r\n  /////////////////////////////////////////////////\r\n  // Trips\r\n  /////////////////////////////////////////////////\r\n  getOldTripList() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/getOldTripsList`);\r\n  }\r\n\r\n  geCurrTripList() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/getcurrentTripsList`);\r\n  }\r\n\r\n  /////////////////////////////////////////////////\r\n  // Profile\r\n  /////////////////////////////////////////////////\r\n  removeUserPhoneNubmer(req) {\r\n    return ajaxPost(`${API_HOST}/ajax/removeUserPhoneNumber`, req);\r\n  }\r\n  saveUserProfile(req) {\r\n    return ajaxPost(`${API_HOST}/ajax/saveuserprofile`, req);\r\n  }\r\n  uploadProfilePhoto(req) {\r\n    return ajaxPostForm(`${API_HOST}/ajax/profilepictureupload`, req);\r\n  }\r\n  getVerification() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/getverifycation`);\r\n  }\r\n  updateVerifyCode(req) {\r\n    return ajaxPost(`${API_HOST}/ajax/sendVerifyCode`, req);\r\n  }\r\n  verifyPhoneNumber(req) {\r\n    return ajaxPost(`${API_HOST}/ajax/verifyPhoneNumber`, req);\r\n  }\r\n\r\n  /////////////////////////////////////////////////\r\n  // Booking Automation\r\n  /////////////////////////////////////////////////\r\n  getBACredential() {\r\n    return ajaxGet(`${API_HOST}/ba/account/get_ba_credential`);\r\n  }\r\n\r\n  submitBAKeys(req) {\r\n    return ajaxPost(`${API_HOST}/ba/account/register`, req);\r\n  }\r\n\r\n  updateBAKeys() {\r\n    return ajaxGet(`${API_HOST}/ba/api/update`);\r\n  }\r\n\r\n  /////////////////////////////////////////////////\r\n  // API Keys\r\n  /////////////////////////////////////////////////\r\n  getApiKey() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/getapikeys`);\r\n  }\r\n\r\n  generateApiKey() {\r\n    return ajaxPost(`${API_HOST}/ajax/dashboard/generateapikeys`);\r\n  }\r\n}\r\n\r\nexport const dashboardService = new DashboardService();"],"sourceRoot":""}