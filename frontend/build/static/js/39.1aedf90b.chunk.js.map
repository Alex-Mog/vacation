{"version":3,"sources":["pages/dashboard/BookingAutomation/BAManageRoomId.jsx","services/dashboard.jsx"],"names":["BAManageRoomId","props","state","page_data","handleChangeStatus","bind","handlePublish","dashboardService","getRoomList","then","res","setState","alertService","showError","list_id","event","preventDefault","value","target","list_index","this","rooms_list","filter","list","id","indexOf","status","published","temp_room","changeRoomState","data","toast","success","message","position","POSITION","TOP_CENTER","index","e","getRoomData","ba_roomid","showSuccess","evt","listed_result_section","length","map","room_list","key","className","href","address_url","rel","src","featured_image","alt","name","defaultValue","onChange","onChangeInput","aria-label","onClick","addBaId","disabled","push","React","Component","ajaxGet","API_HOST","ajaxPost","req","ajaxPostForm"],"mappings":"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","file":"static/js/39.1aedf90b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { dashboardService } from 'services/dashboard';\r\nimport { alertService } from 'services/alert';\r\nimport 'assets/styles/pages/dashboard/bookingAutomation.scss';\r\n\r\nclass BAManageRoomId extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page_data: []\r\n    };\r\n    this.handleChangeStatus = this.handleChangeStatus.bind(this);\r\n    this.handlePublish = this.handlePublish.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    dashboardService.getRoomList().then(res => {\r\n      if (res) {\r\n        this.setState({\r\n          page_data: res.page_data\r\n        });\r\n      } else {\r\n        alertService.showError('Get Room List');\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChangeStatus(list_id, event) {\r\n    event.preventDefault();\r\n\r\n    let value = event.target.value;\r\n    let list_index = this.state.page_data.rooms_list.filter(\r\n      list => list.id === list_id\r\n    );\r\n    list_index = this.state.page_data.rooms_list.indexOf(list_index[0]);\r\n    let { page_data } = this.state;\r\n\r\n    page_data.rooms_list[list_index].status = value;\r\n    page_data.rooms_list[list_index].published = \"unpublished\";\r\n    this.setState({\r\n      page_data: page_data\r\n    });\r\n  }\r\n\r\n  handlePublish(list_id, event) {\r\n    event.preventDefault();\r\n\r\n    let list_index = this.state.page_data.rooms_list.filter(\r\n      list => list.id === list_id\r\n    );\r\n    list_index = this.state.page_data.rooms_list.indexOf(list_index[0]);\r\n\r\n    let temp_room = list_index[0];\r\n    let { page_data } = this.state;\r\n\r\n    dashboardService.changeRoomState({ list_id, status: temp_room.status }).then(res => {\r\n      if (res.data.status === \"success\") {\r\n        toast.success(res.data.message, {\r\n          position: toast.POSITION.TOP_CENTER\r\n        });\r\n        page_data.rooms_list[list_index].published = \"published\";\r\n        this.setState({\r\n          page_data: page_data\r\n        });\r\n      } else {\r\n        alertService.showError('Change Room State');\r\n      }\r\n    })\r\n  }\r\n\r\n  addBaId(index, e) {\r\n    let { page_data } = this.state;\r\n    dashboardService.getRoomData(page_data.rooms_list[index].id, page_data.rooms_list[index].ba_roomid).then(res => {\r\n      if (res.success === true) {\r\n        alertService.showSuccess(res.message);\r\n        dashboardService.getRoomList().then(res => {\r\n          if (res) {\r\n            this.setState({\r\n              page_data: res.page_data\r\n            });\r\n          } else {\r\n            alertService.showError('Get Room List');\r\n          }\r\n        });\r\n      } else {\r\n        alertService.showError(res.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeInput(index, evt) {\r\n    let { page_data } = this.state;\r\n    page_data.rooms_list[index].ba_roomid = evt.target.value;\r\n  }\r\n\r\n  render() {\r\n    let { page_data } = this.state;\r\n    let listed_result_section = [];\r\n    let unlisted_result_section = [];\r\n    if (page_data.rooms_list && page_data.rooms_list.length) {\r\n      page_data.rooms_list.map((list, index) => {\r\n        const room_list = (\r\n          <li key={index}>\r\n            <div className=\"row\" key={index}>\r\n              <div className=\"col-lg-2 col-md-3\">\r\n                <a\r\n                  href={`/homes/${list.address_url}/${list.id}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <div className=\"media-cover text-center\">\r\n                    <img src={list.featured_image} className=\"img-responsive\" alt=\"\" />\r\n                  </div>\r\n                </a>\r\n              </div>\r\n              <div className=\"col-lg-10 col-md-9\">\r\n                <span className=\"list-ink\">\r\n                  <a\r\n                    href={`/homes/${list.address_url}/${list.id}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {list.name}\r\n                  </a>\r\n                </span>\r\n                {\r\n                  list.ba_roomid === null || list.ba_roomid === \"\" ?\r\n                    (\r\n                      <div className=\"form-group\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            name={`${list.id}`}\r\n                            defaultValue=\"\"\r\n                            onChange={e => this.onChangeInput(index, e)}\r\n                            aria-label=\"Room ID\"\r\n                          />\r\n                        </div>\r\n                        <button\r\n                          className=\"btn btn-info\"\r\n                          onClick={e => this.addBaId(index, e)}\r\n                        >\r\n                          Add {list.ba_roomid}\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"form-group\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            name={`${list.id}`}\r\n                            defaultValue={`${list.ba_roomid}`}\r\n                            disabled\r\n                            aria-label=\"Room ID\"\r\n                          />\r\n                        </div>\r\n                        <span className=\"alert alert-success\">Linked</span>\r\n                      </div>\r\n                    )\r\n                }\r\n              </div>\r\n            </div>\r\n          </li>\r\n        );\r\n\r\n        return (listed_result_section.push(room_list));\r\n      });\r\n    }\r\n    return (\r\n      <div className=\"ba-panel\">\r\n        <div className=\"aside-main-content\">\r\n          <div className=\"side-cnt\">\r\n            <div className=\"head-label\">\r\n              <h4>Add Booking Automation room id for each room</h4>\r\n            </div>\r\n            <div className=\"aside-main-cn\">\r\n              <div className=\"your-listing_\">\r\n                <ul className=\"list-unstyled listing-all\">\r\n                  {listed_result_section}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"aside-main-content\">\r\n          <div className=\"head-label\">\r\n            <h4>Unlisted</h4>\r\n          </div>\r\n          <div className=\"aside-main-cn\">\r\n            <div className=\"your-listing_\">\r\n              <ul className=\"list-unstyled listing-all\">\r\n                {unlisted_result_section}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BAManageRoomId;\r\n","import {API_HOST, ajaxGet, ajaxPost, ajaxPostForm} from 'services/config';\r\n\r\nclass DashboardService {\r\n  /////////////////////////////////////////////////\r\n  // Dashboard Content\r\n  /////////////////////////////////////////////////\r\n  getContent() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/index`);\r\n  }\r\n\r\n  /////////////////////////////////////////////////\r\n  // Listings\r\n  /////////////////////////////////////////////////\r\n  getRoomList() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/getlistings`);\r\n  }\r\n\r\n  getRoomData(id, ba_roomid) {\r\n    return ajaxGet(`${API_HOST}/ba/api/set_baroomid?roomid=${id}&&ba_roomid=${ba_roomid}`);\r\n  }\r\n\r\n  // TODO: Add Data\r\n  changeRoomState(data) {\r\n    return ajaxPost(`${API_HOST}/ajax/change_status_of_room`, data);\r\n  }\r\n\r\n  getRoomReservation(data = null) {\r\n    if (data) {\r\n      return ajaxGet(`${API_HOST}/ajax/dashboard/my_reservations` + data);\r\n    } else {\r\n      return ajaxGet(`${API_HOST}/ajax/dashboard/my_reservations`);\r\n    }\r\n  }\r\n\r\n  acceptReservation(id, data) {\r\n    return ajaxPost(`${API_HOST}/ajax/reservation/accept/${id}`, data);\r\n  }\r\n\r\n  declineReservation(id, data) {\r\n    return ajaxPost(`${API_HOST}/ajax/reservation/decline/${id}`, data);\r\n  }\r\n\r\n  /////////////////////////////////////////////////\r\n  // Trips\r\n  /////////////////////////////////////////////////\r\n  getOldTripList() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/getOldTripsList`);\r\n  }\r\n\r\n  geCurrTripList() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/getcurrentTripsList`);\r\n  }\r\n\r\n  /////////////////////////////////////////////////\r\n  // Profile\r\n  /////////////////////////////////////////////////\r\n  removeUserPhoneNubmer(req) {\r\n    return ajaxPost(`${API_HOST}/ajax/removeUserPhoneNumber`, req);\r\n  }\r\n  saveUserProfile(req) {\r\n    return ajaxPost(`${API_HOST}/ajax/saveuserprofile`, req);\r\n  }\r\n  uploadProfilePhoto(req) {\r\n    return ajaxPostForm(`${API_HOST}/ajax/profilepictureupload`, req);\r\n  }\r\n  getVerification() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/getverifycation`);\r\n  }\r\n  updateVerifyCode(req) {\r\n    return ajaxPost(`${API_HOST}/ajax/sendVerifyCode`, req);\r\n  }\r\n  verifyPhoneNumber(req) {\r\n    return ajaxPost(`${API_HOST}/ajax/verifyPhoneNumber`, req);\r\n  }\r\n\r\n  /////////////////////////////////////////////////\r\n  // Booking Automation\r\n  /////////////////////////////////////////////////\r\n  getBACredential() {\r\n    return ajaxGet(`${API_HOST}/ba/account/get_ba_credential`);\r\n  }\r\n\r\n  submitBAKeys(req) {\r\n    return ajaxPost(`${API_HOST}/ba/account/register`, req);\r\n  }\r\n\r\n  updateBAKeys() {\r\n    return ajaxGet(`${API_HOST}/ba/api/update`);\r\n  }\r\n\r\n  /////////////////////////////////////////////////\r\n  // API Keys\r\n  /////////////////////////////////////////////////\r\n  getApiKey() {\r\n    return ajaxGet(`${API_HOST}/ajax/dashboard/getapikeys`);\r\n  }\r\n\r\n  generateApiKey() {\r\n    return ajaxPost(`${API_HOST}/ajax/dashboard/generateapikeys`);\r\n  }\r\n}\r\n\r\nexport const dashboardService = new DashboardService();"],"sourceRoot":""}